#include<stdio.h>
#include<stdlib.h>
struct queue{
    int size;
    int r;
    int f;
    char * arr;
};
int isempty(struct queue *q)
{
    if(q->r==q->f)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int isfull(struct queue * q)
{
    if(q->r==q->size-1)
    {
        return 1;
    }
    else{
        return 0;
    }
}

void insert(struct queue *q , char val){
    if(isfull(q)){
        printf("queue is full");
    }
    else{
        q->r=q->r+1;
        q->arr[q->r]=val;
       printf("element inserted %c \n" , val);
    }
}

int delete(struct queue * q)
{
   char  a=-1;
    if(isempty(q))
    {
        printf("queue is empty");
    }
    else{
        q->f++;
        a=q->arr[q->f];
        printf("element deleted %c  \n",a );
        return a;

    }
}

void display(struct queue * q)
{
    if(isempty(q))
    {
        printf("queue is empty");
    }
    else{
        printf("elements in queue");
        for(int i= q->f;i<=q->r;i++)
        {
            
            printf("%c \n", q->arr[i]);
        }
    }
}

int main()
{
    struct queue q;
    q.size=10;
    q.r=q.f=-1;
    q.arr=(char *)malloc(q.size*sizeof(char));
     printf("queue is implemented \n");
     insert(&q , 's');
     insert(&q , 'h');
     insert(&q , 'r');
     insert(&q , 'e');
     insert(&q , 'y');
     insert(&q , 'a');
     display(&q);
     delete(&q);
     return 0;

}
