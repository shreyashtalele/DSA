#include<stdio.h>
#include<stdlib.h>
struct stack{
    int size ;
    int top;
    int * arr;
};
 int isempty(struct stack *ptr)
 {
     if(ptr->top==-1)
     {
          printf("the stack is empty");
         return 1;
     }
     else
     {
         return 0;
     }
 }
 int isfull(struct stack *ptr)
 {
     if(ptr->top==ptr->size-1)
     {
         return 1;

     }
     else
     {
         return 0;
     }
 }
 int push(int val ,struct stack* ptr)
 {
    if(isfull(ptr))
    {
        printf("stack overflow");
    }
    else{
        ptr->top++;
        ptr->arr[ptr->top]=val;
        return val;
    }
 }
  int pop(struct stack *ptr)
  {
     if(isempty(ptr))
     {
         printf("stack is underflow \n");
     }
     else{
         int val;
         val = ptr->arr[ptr->top];
         ptr->top--;
         return val;
     }
  }
  int peep(struct stack *ptr)
  {
      if(isempty(ptr))
      {
          printf("the stack is empty");
          return 0;
      }
      else
      {
          int val;
          val=ptr->arr[ptr->top];
          return val ;
      }
  }
  void display(struct stack *ptr)
  {
      if(isempty(ptr))
      {
          printf("cannot print \n stack is empty");
      }
      else
      {
        printf("the stack elements are\n ");
          for(int i =ptr->top ; i>=0; i--)
          {
              printf("%d \n",ptr->arr[ptr->top]);
              ptr->top--;
          }
      }
  }
int main()
{
    struct stack *sp;
    sp =(struct stack *)malloc (sizeof(struct stack));
    sp->size = 8;
    sp->top = -1;
    sp->arr=(int *)malloc(sp->size * sizeof(int));
    printf("the stack is implemnted\n ");
    printf("pushed %d in a stack\n", push(45,sp));
     printf("pushed %d in a stack\n", push(55,sp));
      printf("pushed %d in a stack\n", push(65,sp));
       printf("pushed %d in a stack\n", push(75,sp));
      // printf("poped %d from stack\n ", pop(sp));
    //isempty(sp);
     //printf("the topmost element is %d",peep(sp));
    display(sp);
    return 0;
}
